name: ci-test

on:
  push:
    branches: [ actions ]
  pull_request:
    branches: [ actions ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: ^1.22
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Tidy go mod
      run: go mod tidy

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.1/migrate.linux-amd64.tar.gz | tar xvz
        ls -l
        sudo mv migrate /usr/bin/migrate
        which migrate
        
    - name: Run migrations
      env:
        DB_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}?sslmode=disable
      run: make -f makefile.repo migrate_up
  
    - name: add env
      run: echo ${{ secrets.APP_ENV }} > app.env
        
    - name: Debug env variables
      run: |
        echo "DB_URL=${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}"
        echo "Contents of app.env:"
        cat app.env
    - name: Test
      run: make -f makefile.repo test_coverage
